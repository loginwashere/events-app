{"version":3,"sources":["api/events.ts","config/routes.ts","components/Header/index.tsx","containers/Header/index.tsx","api/index.ts","components/EventsTable/TablePaginatedActions.tsx","constants/index.ts","components/EventsTable/WeekPicker.tsx","components/EventsTable/Table.tsx","pages/EventsList/Page.tsx","actions/index.ts","pages/EventsList/index.tsx","pages/EventsNew/Page.tsx","pages/EventsNew/index.tsx","pages/EventsView/Page.tsx","pages/EventsView/index.tsx","pages/NoMatch/Page.tsx","pages/NoMatch/index.tsx","components/Root/index.tsx","reducers/initialState.ts","reducers/progressBar.ts","reducers/events.ts","store.ts","reducers/index.ts","serviceWorker.ts","index.tsx"],"names":["Format","Overlaps","routes","list","new","view","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","open","setState","isDrawerOpen","state","_this$props","classes","progressBar","sideList","react_default","a","createElement","className","core_List_default","NavLink","to","sideListItem","ListItem_default","button","ListItemIcon_default","Add_default","ListItemText_default","primary","List_default","container","AppBar_default","position","Toolbar_default","variant","IconButton_default","menuButton","color","aria-label","onClick","Menu_default","Typography_default","grow","brand","loading","LinearProgress_default","progress","Drawer_default","onClose","tabIndex","role","onKeyDown","Component","withStyles","theme","textDecoration","display","alignItems","justifyContent","flexGrow","marginLeft","marginRight","width","textField","spacing","unit","fab","bottom","right","marginBottom","top","padding","withTheme","Container","connect","dispatch","DEFAULT_PAGE","axios","defaults","baseURL","process","ActionTypes","TablePaginationActions","handleFirstPageButtonClick","event","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","root","disabled","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","React","flexShrink","palette","text","secondary","WeekPicker","handleWeekChange","date","onChange","startOfWeek","formatWeekSelectLabel","invalidLabel","concat","getISOWeek","getYear","renderWrappedWeekDay","selectedDate","dayInCurrentMonth","_classNames","_classNames2","start","end","endOfWeek","dayIsBetween","isWithinInterval","isFirstDay","isSameDay","isLastDay","wrapperClassName","classNames","defineProperty","highlight","firstHighlight","endHighlight","dayClassName","day","nonCurrentMonthDay","highlightNonCurrentMonthDay","index_es","format","awareOfUnicodeTokens","value","label","material_ui_pickers_esm","renderDay","labelFunc","PureComponent","dayWrapper","height","fontSize","typography","caption","margin","customDayHighlight","left","border","main","borderRadius","background","common","white","extend","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","CustomPaginationActionsTable","handleDateChange","changeParam","since","before","handleChangePage","handleChangeRowsPerPage","parseInt","target","emptyRows","events","items","pages","currentPage","totalCount","itemIds","min","length","tableWrapper","EventsTable_WeekPicker","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","filter","id","map","row","key","component","scope","style","backgroundColor","category","Date","toLocaleString","colSpan","TableFooter_default","TablePagination_default","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","TablePaginatedActions","marginTop","minWidth","overflowX","CurrencyListPage","loaded","fetchItems","nextProps","Fragment","Paper_default","elevation","EventsTable_Table","objectSpread","mixins","gutters","paddingTop","paddingBottom","fetchAllEventsActions","createAsyncAction","EVENTS_FETCH_REQUEST","EVENTS_FETCH_SUCCESS","EVENTS_FETCH_FALIURE","fetchAll","params","getState","request","eventsState","_ref","overlaps","method","url","toISOString","undefined","Unknown","paginate_by","json","api","then","response","success","data","catch","failure","fetchAllParamsChange","createAction","EVENTS_FETCH_PARAMS_CHANGE","action","Page","NoMatchPage","Root","store","history","es","integration_react","persistor","utils","DateFnsUtils","esm","containers_Header","Switch","Route","path","EventsList","EventsNew","EventsView","exact","NoMatch","now","RootState","reducers_progressBar","arguments","type","getType","actions","reducers_events","payload","results","reduce","result","current","keys","change","REHYDRATE","createHistory","basename","configureStore","preloadedState","persistConfig","storage","blacklist","persistedReducer","persistReducer","combineReducers","router","connectRouter","rootReducer","middlewares","routerMiddleware","thunk","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","createStore","persistStore","Boolean","window","location","hostname","match","render","components_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e2618e4.chunk.js","sourcesContent":["import axios, { AxiosPromise } from 'axios';\nimport { IEvent } from '../reducers/initialState';\n\nexport interface IFetchAllResponse {\n  count: number;\n  next: string|null;\n  previous: string|null;\n  results: IEvent[];\n}\n\nexport enum Format {\n  json = 'json',\n}\n\nexport enum Overlaps {\n  Unknown = 1,\n  Yes,\n  No,\n}\n\nexport interface IFetchAllEventsParams {\n  page?: number;\n  rowsPerPage?: number;\n  format?: Format;\n  overlaps?: Overlaps;\n  since?: Date;\n  before?: Date;\n}\n\nexport const DEFAULT_PAGE = 0;\nexport const DEFAULT_PER_PAGE = 10;\n\nexport const fetchAllEvents = ({\n  since,\n  before,\n  page,\n  rowsPerPage,\n  format,\n  overlaps,\n}: IFetchAllEventsParams): AxiosPromise<IFetchAllResponse> => axios({\n  method: 'get',\n  url: '/calendar/',\n  params: {\n    since: since\n      ? since.toISOString()\n      : undefined,\n    before: before\n        ? before.toISOString()\n        : undefined,\n    overlaps: overlaps || Overlaps.Unknown,\n    page: (page || DEFAULT_PAGE) + 1,\n    paginate_by: rowsPerPage || DEFAULT_PER_PAGE,\n    format: format || Format.json,\n  },\n});\n","export const routes = {\n  events: {\n    list: '/events/list',\n    new: '/events/new',\n    view: '/events/edit/:id',\n  },\n  default: '/',\n};\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListIcon from '@material-ui/icons/List';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { routes } from '../../config';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IProgressBarState } from '../../reducers/initialState';\n\nconst styles = (theme: Theme) => ({\n  brand: {\n    color: 'inherit',\n    textDecoration: 'none',\n    display: 'flex',\n    alignItems: 'inherit',\n    justifyContent: 'inherit',\n  },\n  sideListItem: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  list: {\n    width: 250,\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 400,\n  },\n  fab: {\n    position: 'absolute' as 'absolute',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  container: {\n    marginBottom: 48,\n  },\n  progress: {\n    position: 'relative' as 'relative',\n    top: 49,\n  },\n  padding: {\n    padding: theme.spacing.unit,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  progressBar: IProgressBarState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nexport interface IState {\n  isDrawerOpen: boolean;\n}\n\nclass Header extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      isDrawerOpen: false,\n    };\n  }\n\n  // componentWillReceiveProps() {\n  //   this.props.onApiInit();\n  // }\n\n  // componentDidMount() {\n  //   this.props.onApiInit();\n  // }\n\n  toggleDrawer = (open: boolean) => () => {\n    this.setState({\n      isDrawerOpen: open,\n    });\n  };\n\n  render() {\n    const { classes, progressBar, } = this.props;\n    const sideList = (\n      <div className={classes.list}>\n        <List>\n          <NavLink to={routes.events.new} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><AddIcon /></ListItemIcon>\n              <ListItemText primary={'New Event'} />\n            </ListItem>\n          </NavLink>\n          <NavLink to={routes.events.list} className={classes.sideListItem}>\n            <ListItem button>\n              <ListItemIcon><ListIcon /></ListItemIcon>\n              <ListItemText primary={'List Events'} />\n            </ListItem>\n          </NavLink>\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.container}>\n        <AppBar\n          position=\"fixed\"\n        >\n          <Toolbar variant=\"dense\">\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Menu\"\n              onClick={this.toggleDrawer(true)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              <NavLink to={routes.default} className={classes.brand}>\n                Events App\n              </NavLink>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        { (progressBar.loading) &&\n          <LinearProgress className={classes.progress} color=\"secondary\" />\n        }\n        <Drawer open={this.state.isDrawerOpen} onClose={this.toggleDrawer(false)}>\n          <div\n            tabIndex={0}\n            role=\"button\"\n            onClick={this.toggleDrawer(false)}\n            onKeyDown={this.toggleDrawer(false)}\n          >\n            {sideList}\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Header);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport Header from '../../components/Header';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    progressBar: state.progressBar,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\nexport default Container;\n","import axios from 'axios';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\n\nexport * from './events';\n","import React from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { DEFAULT_PAGE } from '../../api';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  page: number;\n  count: number;\n  rowsPerPage: number;\n  theme: Theme;\n  onChangePage(event: React.MouseEvent<HTMLElement>|null, page: number): any;\n}\n\nclass TablePaginationActions extends React.Component<IProps> {\n  handleFirstPageButtonClick = (event: React.MouseEvent<HTMLElement>|null) => {\n    this.props.onChangePage(event, DEFAULT_PAGE);\n  };\n\n  handleBackButtonClick = (event: React.MouseEvent<HTMLElement>|null) => {\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = (event: React.MouseEvent<HTMLElement>|null) => {\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = (event: React.MouseEvent<HTMLElement>|null) => {\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(\n  TablePaginationActions,\n);\n","export enum ActionTypes {\n  EVENTS_FETCH_REQUEST = 'EVENTS_FETCH_REQUEST',\n  EVENTS_FETCH_SUCCESS = 'EVENTS_FETCH_SUCCESS',\n  EVENTS_FETCH_FALIURE = 'EVENTS_FETCH_FALIURE',\n\n  EVENTS_FETCH_PARAMS_CHANGE = 'EVENTS_FETCH_PARAMS_CHANGE',\n}\n","import React, { PureComponent } from \"react\";\nimport classNames from \"classnames\";\n\nimport { DatePicker } from \"material-ui-pickers\";\nimport { IconButton, withStyles, Theme } from \"@material-ui/core\";\nimport { ClassNameMap } from \"@material-ui/core/styles/withStyles\";\nimport {startOfWeek, endOfWeek, getISOWeek, getYear, format, isSameDay, isWithinInterval} from 'date-fns';\n\nexport interface IProps<ClassKey extends string = string> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n  value: Date;\n  label?: string;\n  onChange: (date: Date) => any;\n}\n\nclass WeekPicker extends PureComponent<IProps> {\n  handleWeekChange = (date: Date) => {\n    this.props.onChange(startOfWeek(date));\n  };\n\n  formatWeekSelectLabel = (date: Date, invalidLabel: string) => {\n    if (date === null) {\n      return \"\";\n    }\n\n    return date ? `CW ${getISOWeek(date)}, ${getYear(date)}` : invalidLabel;\n  };\n\n  renderWrappedWeekDay = (date: Date, selectedDate: Date, dayInCurrentMonth: boolean) => {\n    const { classes } = this.props;\n\n    const start = startOfWeek(selectedDate);\n    const end = endOfWeek(selectedDate);\n\n    const dayIsBetween = isWithinInterval(date, {start, end});\n    const isFirstDay = isSameDay(date, start);\n    const isLastDay =isSameDay(date, end);\n\n    const wrapperClassName = classNames({\n      [classes.highlight as any]: dayIsBetween,\n      [classes.firstHighlight as any]: isFirstDay,\n      [classes.endHighlight as any]: isLastDay\n    });\n\n    const dayClassName = classNames(classes.day, {\n      [classes.nonCurrentMonthDay as any]: !dayInCurrentMonth,\n      [classes.highlightNonCurrentMonthDay as any]: !dayInCurrentMonth && dayIsBetween\n    });\n\n    return (\n      <div className={wrapperClassName}>\n        <IconButton className={dayClassName}>\n          <span> {format(date, \"d\", { awareOfUnicodeTokens: true })} </span>\n        </IconButton>\n      </div>\n    );\n  };\n\n  render() {\n    const { value, label } = this.props;\n\n    return (\n      <div className=\"picker\">\n        <DatePicker\n          label={label}\n          value={value}\n          onChange={this.handleWeekChange}\n          renderDay={this.renderWrappedWeekDay}\n          labelFunc={this.formatWeekSelectLabel}\n        />\n      </div>\n    );\n  }\n}\n\nconst styles = (theme: Theme) => ({\n  dayWrapper: {\n    position: \"relative\" as 'relative',\n  },\n  day: {\n    width: 36,\n    height: 36,\n    fontSize: theme.typography.caption.fontSize,\n    margin: \"0 2px\",\n    color: \"inherit\"\n  },\n  customDayHighlight: {\n    position: \"absolute\" as 'absolute',\n    top: 0,\n    bottom: 0,\n    left: \"2px\",\n    right: \"2px\",\n    border: `1px solid ${theme.palette.secondary.main}`,\n    borderRadius: \"50%\"\n  },\n  nonCurrentMonthDay: {\n    color: theme.palette.text.disabled\n  },\n  highlightNonCurrentMonthDay: {\n    color: \"#676767\"\n  },\n  highlight: {\n    background: theme.palette.primary.main,\n    color: theme.palette.common.white\n  },\n  firstHighlight: {\n    extend: \"highlight\",\n    borderTopLeftRadius: \"50%\",\n    borderBottomLeftRadius: \"50%\"\n  },\n  endHighlight: {\n    extend: \"highlight\",\n    borderTopRightRadius: \"50%\",\n    borderBottomRightRadius: \"50%\"\n  }\n});\n\nexport default withStyles(styles, { withTheme: true })(WeekPicker);\n","import React, { ChangeEvent } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport TablePaginatedActions from './TablePaginatedActions';\nimport { IProgressBarState, IEventsState, IEvent } from '../../reducers/initialState';\nimport { IFetchAllEventsParams, DEFAULT_PAGE } from '../../api';\nimport {startOfWeek, endOfWeek} from 'date-fns';\nimport WeekPicker from './WeekPicker';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto' as 'auto',\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> {\n  progressBar: IProgressBarState;\n  events: IEventsState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  changeParam(params: IFetchAllEventsParams): any;\n}\n\nexport interface IState {\n  isDrawerOpen: boolean;\n}\n\ntype HTMLElementEvent<T extends HTMLElement> = ChangeEvent & {\n  target: T;\n}\n\nclass CustomPaginationActionsTable extends React.Component<IProps> {\n  handleDateChange = (date: Date) => {\n    this.props.changeParam({\n      since: startOfWeek(date),\n      before: endOfWeek(date),\n      page: DEFAULT_PAGE,\n    });\n  };\n\n  handleChangePage = (event: React.MouseEvent<HTMLElement>|null, page: number) => {\n    this.props.changeParam({page});\n  };\n\n  handleChangeRowsPerPage = (event: HTMLElementEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    this.props.changeParam({page: DEFAULT_PAGE, rowsPerPage: parseInt(event.target.value, 10) });\n  };\n\n  render() {\n    const { classes, events, } = this.props;\n    const { items, pages, rowsPerPage, currentPage, totalCount } = events;\n    const itemIds = pages[currentPage] || [];\n    let emptyRows;\n    emptyRows = rowsPerPage - Math.min(rowsPerPage, itemIds.length - currentPage * rowsPerPage);\n    emptyRows = emptyRows >= rowsPerPage\n      ? 0\n      : emptyRows;\n    return (\n        <div className={classes.tableWrapper}>\n          <WeekPicker value={events.since} onChange={this.handleDateChange} label=\"Current week\" />\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Label</TableCell>\n                <TableCell align=\"right\">Category</TableCell>\n                <TableCell align=\"right\">Start Date</TableCell>\n                <TableCell align=\"right\">EndDate</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {itemIds\n                .filter(id => items[id])\n                .map(id => items[id])\n                .map((row: IEvent) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.label}\n                  </TableCell>\n                  <TableCell align=\"center\" style={{backgroundColor: row.category}}>\n                    <span style={{backgroundColor: 'white'}}>{row.category}</span>\n                  </TableCell>\n                  <TableCell align=\"right\">{new Date(row.start).toLocaleString()}</TableCell>\n                  <TableCell align=\"right\">{new Date(row.end).toLocaleString()}</TableCell>\n                </TableRow>\n              ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={currentPage}\n                  SelectProps={{\n                    native: true,\n                  }}\n                  onChangePage={this.handleChangePage}\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginatedActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CustomPaginationActionsTable);\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { IEventsState, IProgressBarState } from '../../reducers/initialState';\nimport { IFetchAllEventsParams } from '../../api';\nimport Table from '../../components/EventsTable/Table';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<CurrencyListPage> {\n  events: IEventsState;\n  progressBar: IProgressBarState;\n  classes: Partial<ClassNameMap<ClassKey>>;\n  fetchItems(params?: IFetchAllEventsParams): any;\n  changeParam(params: IFetchAllEventsParams): any;\n}\n\nclass CurrencyListPage extends Component<IProps> {\n  componentDidMount() {\n    if (!this.props.events.loaded) {\n      this.props.fetchItems();\n    }\n  }\n\n  componentWillReceiveProps(nextProps: IProps) {\n    if (\n      this.props.events.currentPage !== nextProps.events.currentPage ||\n      this.props.events.rowsPerPage !== nextProps.events.rowsPerPage ||\n      this.props.events.since !== nextProps.events.since ||\n      this.props.events.before !== nextProps.events.before\n    ) {\n      this.props.fetchItems();\n    }\n  }\n\n  render() {\n    const { classes, events, progressBar } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          <Paper className={classes.root} elevation={1}>\n            <Table\n              events={events}\n              progressBar={progressBar}\n              changeParam={this.props.changeParam}\n            />\n          </Paper>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CurrencyListPage);\n","import { createAsyncAction, ActionType, createAction, } from 'typesafe-actions';\nimport { ThunkDispatch } from 'redux-thunk';\nimport * as api from '../api';\nimport { ActionTypes } from '../constants';\nimport { IRootState } from '../reducers/initialState';\nimport { IFetchAllResponse, IFetchAllEventsParams, } from '../api';\n\nexport const fetchAllEventsActions = createAsyncAction(\n  ActionTypes.EVENTS_FETCH_REQUEST,\n  ActionTypes.EVENTS_FETCH_SUCCESS,\n  ActionTypes.EVENTS_FETCH_FALIURE,\n)<void, IFetchAllResponse, void>();\n\nexport const fetchAll = (params?: IFetchAllEventsParams) => (\n  dispatch: ThunkDispatch<IRootState, null, ActionType<typeof fetchAllEventsActions>>,\n  getState: () => IRootState\n) => {\n  dispatch(fetchAllEventsActions.request());\n\n  const eventsState = getState().events;\n\n  const fetchParams = {\n    page: params && params.page !== undefined\n      ? params.page\n      : eventsState.currentPage,\n    rowsPerPage: params && params.rowsPerPage\n      ? params.rowsPerPage\n      : eventsState.rowsPerPage,\n    since: eventsState.since,\n    before: eventsState.before,\n  };\n\n  return api.fetchAllEvents(fetchParams)\n    .then((response) => {\n      return dispatch(fetchAllEventsActions.success(response.data));\n    })\n    .catch(() => {\n      return dispatch(fetchAllEventsActions.failure());\n    });\n};\n\nexport const fetchAllParamsChange = createAction(ActionTypes.EVENTS_FETCH_PARAMS_CHANGE, action => {\n  return (params: IFetchAllEventsParams) => {\n    return action(params);\n  }\n});\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport Page from './Page';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\nimport { fetchAll, fetchAllParamsChange } from '../../actions';\nimport { IFetchAllEventsParams } from '../../api';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    events: state.events,\n    progressBar: state.progressBar,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n    fetchItems: (params?: IFetchAllEventsParams) => dispatch(fetchAll(params)),\n    changeParam: (params: IFetchAllEventsParams) => dispatch(fetchAllParamsChange(params)),\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<NoMatchPage> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass NoMatchPage extends Component<IProps> {\n  render() {\n    const { classes, } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          Events new page\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NoMatchPage);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport Page from './Page';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<NoMatchPage> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass NoMatchPage extends Component<IProps> {\n  render() {\n    const { classes, } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          Events view page\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NoMatchPage);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport Page from './Page';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n});\n\nexport interface IProps<ClassKey extends string = string> extends React.ClassAttributes<NoMatchPage> {\n  classes: Partial<ClassNameMap<ClassKey>>;\n}\n\nclass NoMatchPage extends Component<IProps> {\n  render() {\n    const { classes, } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.root} elevation={1}>\n          404 - Page Not Found\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NoMatchPage);\n","import { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport Page from './Page';\nimport { IRootState } from '../../reducers/initialState';\nimport { RootActions } from '../../reducers';\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IRootState, null, RootActions>) => {\n  return {\n  };\n};\n\nconst Container = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Page);\n\nexport default Container;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router'\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport Header from '../../containers/Header';\nimport EventsList from '../../pages/EventsList';\nimport EventsNew from '../../pages/EventsNew';\nimport EventsView from '../../pages/EventsView';\nimport NoMatch from '../../pages/NoMatch';\nimport { routes } from '../../config';\nimport { Store } from 'redux';\nimport { IRootState } from '../../reducers/initialState';\nimport { History } from 'history';\nimport { Persistor } from 'redux-persist';\n\nexport interface IProps {\n  store: {\n    store: Store<IRootState>;\n    persistor: Persistor;\n  };\n  history: History;\n}\n\nconst Root = ({ store, history }: IProps) => (\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Router history={history}>\n          <div>\n            <Header />\n            <Switch>\n              <Route path={routes.events.list} component={EventsList} />\n              <Route path={routes.events.new} component={EventsNew} />\n              <Route path={routes.events.view} component={EventsView} />\n              <Route path={routes.default} component={EventsList} exact={true} />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n        </Router>\n      </MuiPickersUtilsProvider>\n    </PersistGate>\n  </Provider>\n);\n\nexport default Root;\n","import { RouterState } from 'connected-react-router';\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from '../api';\nimport {startOfWeek, endOfWeek} from 'date-fns';\n\nexport interface IProgressBarState {\n  loading: boolean;\n  loaded: boolean;\n  date: Date;\n}\n\nexport interface IEvent {\n  id?: string;\n  start: Date;\n  end: Date;\n  category: string;\n  label: string;\n}\n\nexport interface IEvents {\n  [key: string]: IEvent;\n}\n\nexport interface IPages {\n  [key: number]: string[];\n}\n\nexport interface IEventsState {\n  items: IEvents;\n  pages: IPages;\n  currentPage: number;\n  rowsPerPage: number;\n  totalCount: number;\n  since: Date;\n  before: Date;\n  loading: boolean;\n  loaded: boolean;\n}\n\nexport interface IRootState {\n  progressBar: IProgressBarState;\n  events: IEventsState;\n  router?: RouterState;\n}\n\nconst now = new Date();\n\nexport const RootState: IRootState = {\n  progressBar: {\n    loading: false,\n    loaded: false,\n    date: new Date(),\n  },\n  events: {\n    items: {},\n    pages: [],\n    currentPage: DEFAULT_PAGE,\n    rowsPerPage: DEFAULT_PER_PAGE,\n    since: startOfWeek(now),\n    before: endOfWeek(now),\n    totalCount: 0,\n    loading: false,\n    loaded: false,\n  }\n};\n","import { ActionType, getType } from 'typesafe-actions';\nimport { RootState, IProgressBarState } from './initialState';\nimport * as actions from '../actions';\n\nexport type Actions = ActionType<typeof actions.fetchAllEventsActions>;\n\nexport default (state: IProgressBarState = RootState.progressBar, action: Actions) => {\n  switch (action.type) {\n    case getType(actions.fetchAllEventsActions.request): {\n      return {\n        ...state,\n        loading: true,\n        loaded: false,\n      };\n    }\n    case getType(actions.fetchAllEventsActions.success): {\n      return {\n        ...state,\n        loading: false,\n        loaded: true,\n      };\n    }\n    case getType(actions.fetchAllEventsActions.failure): {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { ActionType, getType } from 'typesafe-actions';\nimport { RootState, IEventsState, IEvents, IEvent, IPages, IRootState } from './initialState';\nimport * as actions from '../actions';\nimport { RehydrateAction, REHYDRATE } from 'redux-persist';\nimport {startOfWeek, endOfWeek} from 'date-fns';\n\nexport type Actions = ActionType<typeof actions.fetchAllEventsActions|typeof actions.fetchAllParamsChange|RehydrateAction<IRootState>>;\n\nexport default (state: IEventsState = RootState.events, action: Actions) => {\n  switch (action.type) {\n    case getType(actions.fetchAllEventsActions.success): {\n      const items: IEvents = action.payload.results\n        .reduce((result: IEvents, current: IEvent) => {\n          if (!current.id) {\n            return result;\n          }\n          return {...result, [current.id]: current}\n        }, {});\n\n      const pages: IPages = state.pages;\n      pages[state.currentPage] = Object.keys(items)\n        .filter((id: string) => items[id]);\n      return {\n        ...state,\n        items: {\n          ...state.items,\n          ...items,\n        },\n        pages,\n        totalCount: action.payload.count,\n      };\n    }\n    case getType(actions.fetchAllParamsChange): {\n      const change = {\n        currentPage: action.payload.page !== undefined\n          ? action.payload.page\n          : state.currentPage,\n        rowsPerPage: action.payload.rowsPerPage\n          ? action.payload.rowsPerPage\n          : state.rowsPerPage,\n        since: action.payload.since\n          ? action.payload.since\n          : state.since,\n        before: action.payload.before\n          ? action.payload.before\n          : state.before,\n      }\n      return {\n        ...state,\n        ...change,\n      };\n    }\n    case REHYDRATE: {\n      const now = new Date();\n      return {\n        ...state,\n        since: state.since\n          ? new Date(state.since)\n          : startOfWeek(now),\n        before: state.before\n          ? new Date(state.before)\n          : endOfWeek(now),\n      }\n    }\n    default:\n      return state;\n  }\n};\n","import createHistory from 'history/createBrowserHistory';\nimport { History } from 'history';\nimport { createStore, applyMiddleware, } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\n\n\nimport rootReducer from './reducers';\n\nexport const history = createHistory({\n  basename: process.env.PUBLIC_URL,\n});\n\nexport interface IProps {\n  preloadedState: any;\n  history: History;\n}\n\nconst configureStore = ({preloadedState, history}: IProps) => {\n  const persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: [\n      'auth',\n      'authClientLoad',\n      'authClientInit',\n    ]\n  }\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer(history))\n\n  const middlewares = [\n    routerMiddleware(history),\n    thunk,\n  ];\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [\n    middlewareEnhancer,\n  ];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(\n    persistedReducer,\n    preloadedState,\n    composedEnhancers\n  );\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import { combineReducers, } from 'redux';\nimport { connectRouter, RouterAction } from 'connected-react-router';\nimport { History } from 'history';\nimport { IRootState } from './initialState';\nimport progressBar from './progressBar';\nimport events, {Actions as EventsActions} from './events';\n\nexport type RootActions = RouterAction|EventsActions;\n\nexport default (history: History) => combineReducers<IRootState>({\n  progressBar,\n  events,\n  router: connectRouter(history),\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport './index.css';\n\nimport Root from './components/Root';\nimport configureStore, {history} from './store';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst preloadedState = {};\n\nrender(\n  <Root\n    store={configureStore({preloadedState, history})}\n    history={history}\n  />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}